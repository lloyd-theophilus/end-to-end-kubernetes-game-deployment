pipeline{
    agent any

    tools {
        nodejs 'node21'
    }
    environment {
        SCANNER_HOME=tool 'sonar-scanner'
        DATE = new Date().format('yy.M')
        TAG = "${DATE}.${BUILD_NUMBER}"
        DOCKER_BUILDKIT='1'
        APP_NAME = "Game_App"
    }
    stages{
        stage("clean workspace"){
            steps{
               cleanWs()
            }
            
        }
        stage("Checkout"){
            steps{
                git branch: 'main', url: "https://github.com/lloyd-theophilus/end-to-end-kubernetes-game-deployment.git"
            }
            
        }
        stage("Code Analysis"){
            steps{
                withSonarQubeEnv('sonar-server') {
                    sh" $SCANNER_HOME/bin/sonar-scanner -Dsonar.projectName=GameApp \
                            -Dsonar.java.binaries=. \
                            -Dsonar.projectKey=GameApp \
                            -Dsonar.sources=. "
                }
            }
            
        }
        stage("quality gate"){
           steps {
                script {
                    waitForQualityGate abortPipeline: false, credentialsId: 'sonar-token' 
                }
            } 
        }
        stage('Install Dependencies') {
            steps {
                sh "npm install"
            }
        }
        stage('OWASP FS SCAN') {
            steps {
                dependencyCheck additionalArguments: '--scan ./ --disableYarnAudit --disableNodeAudit', odcInstallation: 'DP-Check'
                //dependencyCheckPublisher pattern:
            }
        }
        stage("Docker Build Image"){
            steps{
                script{
                   withDockerRegistry(credentialsId: 'docker', toolName: 'docker'){   
                       //sh "docker build -t gameapp ."
                       sh 'docker build --build-arg BUILD_ENV=test -t lloyddigital/gameapp:${TAG} .'
                       sh "docker tag gameapp lloyddigital/gameapp:${TAG} "
                       sh "docker push lloyddigital/gameapp:${TAG} "
                    }
                }
            }
            
        }

    }
}